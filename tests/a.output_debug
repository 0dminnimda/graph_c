Welcome to example graph program!

> Debug mode: turned on

> DEBUG: Current graph state:
Graph(0 nodes, 0 edges):
edges:
nodes:

> DEBUG: Name: 'a', Index: 0

> WARNING: Node 'a' already exists
DEBUG: Name: 'a', Index: 0

> WARNING: Node 'a' already exists
DEBUG: Name: 'a', Index: 0

> DEBUG: Current graph state:
Graph(1 nodes, 0 edges):
edges:
nodes:
0  in:
0 out:

> DEBUG: Name: 'b', Index: 1

> WARNING: Node 'b' already exists
DEBUG: Name: 'b', Index: 1

> WARNING: Node 'b' already exists
DEBUG: Name: 'b', Index: 1

> DEBUG: Current graph state:
Graph(2 nodes, 0 edges):
edges:
nodes:
0  in:
0 out:
1  in:
1 out:

> ERROR: weight must be in range [0, 65535]

> ERROR: failed to parse weight '-65535' as a number

> DEBUG: Index1: 0, Index2: 1, Weight: 65535

> DEBUG: Current graph state:
Graph(2 nodes, 1 edges):
edges:
[0] = 0 -> 1 (65535)
nodes:
0  in:
0 out: [0] 1 (65535),
1  in: [0] 0 (65535),
1 out:

> DEBUG: Index1: 1, Index2: 0, Weight: 4

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 1 (65535)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4),
0 out: [0] 1 (65535),
1  in: [0] 0 (65535),
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 0, Weight: 9

> DEBUG: Current graph state:
Graph(2 nodes, 3 edges):
edges:
[0] = 0 -> 1 (65535)
[1] = 1 -> 0 (4)
[2] = 0 -> 0 (9)
nodes:
0  in: [1] 1 (4), [2] 0 (9),
0 out: [0] 1 (65535), [2] 0 (9),
1  in: [0] 0 (65535),
1 out: [1] 0 (4),

> DEBUG: Index1: 1, Index2: 1, Weight: 6

> DEBUG: Current graph state:
Graph(2 nodes, 4 edges):
edges:
[0] = 0 -> 1 (65535)
[1] = 1 -> 0 (4)
[2] = 0 -> 0 (9)
[3] = 1 -> 1 (6)
nodes:
0  in: [1] 1 (4), [2] 0 (9),
0 out: [0] 1 (65535), [2] 0 (9),
1  in: [0] 0 (65535), [3] 1 (6),
1 out: [1] 0 (4), [3] 1 (6),

> DEBUG: Index1: 0, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 3 edges):
edges:
[0] = 1 -> 1 (6)
[1] = 1 -> 0 (4)
[2] = 0 -> 0 (9)
nodes:
0  in: [1] 1 (4), [2] 0 (9),
0 out: [2] 0 (9),
1  in: [0] 1 (6),
1 out: [1] 0 (4), [0] 1 (6),

> DEBUG: Index1: 1, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9),
1  in:
1 out: [1] 0 (4),

> WARNING: edge between nodes 'a' and 'b' does not exist
DEBUG: Index1: 0, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9),
1  in:
1 out: [1] 0 (4),

> WARNING: edge between nodes 'b' and 'b' does not exist
DEBUG: Index1: 1, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9),
1  in:
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 1, Weight: 655

> DEBUG: Current graph state:
Graph(2 nodes, 3 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
[2] = 0 -> 1 (655)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9), [2] 1 (655),
1  in: [2] 0 (655),
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9),
1  in:
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 1, Weight: 65

> DEBUG: Current graph state:
Graph(2 nodes, 3 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
[2] = 0 -> 1 (65)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9), [2] 1 (65),
1  in: [2] 0 (65),
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9),
1  in:
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 1, Weight: 855

> DEBUG: Current graph state:
Graph(2 nodes, 3 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
[2] = 0 -> 1 (855)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9), [2] 1 (855),
1  in: [2] 0 (855),
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9),
1  in:
1 out: [1] 0 (4),

> WARNING: edge between nodes 'a' and 'b' does not exist
DEBUG: Index1: 0, Index2: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 0 (9)
[1] = 1 -> 0 (4)
nodes:
0  in: [1] 1 (4), [0] 0 (9),
0 out: [0] 0 (9),
1  in:
1 out: [1] 0 (4),

> DEBUG: Index1: 0, Index2: 0

> DEBUG: Current graph state:
Graph(2 nodes, 1 edges):
edges:
[0] = 1 -> 0 (4)
nodes:
0  in: [0] 1 (4),
0 out:
1  in:
1 out: [0] 0 (4),

> DEBUG: Index1: 1, Index2: 1, Weight: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 1 -> 0 (4)
[1] = 1 -> 1 (1)
nodes:
0  in: [0] 1 (4),
0 out:
1  in: [1] 1 (1),
1 out: [0] 0 (4), [1] 1 (1),

> DEBUG: Index1: 1, Index2: 0

> DEBUG: Current graph state:
Graph(2 nodes, 1 edges):
edges:
[0] = 1 -> 1 (1)
nodes:
0  in:
0 out:
1  in: [0] 1 (1),
1 out: [0] 1 (1),

> DEBUG: Index1: 0, Index2: 0, Weight: 1

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 1 -> 1 (1)
[1] = 0 -> 0 (1)
nodes:
0  in: [1] 0 (1),
0 out: [1] 0 (1),
1  in: [0] 1 (1),
1 out: [0] 1 (1),

> DEBUG: Index1: 0, Index2: 1, Weight: 1

> DEBUG: Current graph state:
Graph(2 nodes, 3 edges):
edges:
[0] = 1 -> 1 (1)
[1] = 0 -> 0 (1)
[2] = 0 -> 1 (1)
nodes:
0  in: [1] 0 (1),
0 out: [1] 0 (1), [2] 1 (1),
1  in: [0] 1 (1), [2] 0 (1),
1 out: [0] 1 (1),

> DEBUG: Index1: 1, Index2: 0, Weight: 1

> DEBUG: Current graph state:
Graph(2 nodes, 4 edges):
edges:
[0] = 1 -> 1 (1)
[1] = 0 -> 0 (1)
[2] = 0 -> 1 (1)
[3] = 1 -> 0 (1)
nodes:
0  in: [1] 0 (1), [3] 1 (1),
0 out: [1] 0 (1), [2] 1 (1),
1  in: [0] 1 (1), [2] 0 (1),
1 out: [0] 1 (1), [3] 0 (1),

> DEBUG: Index: 0

> DEBUG: Current graph state:
Graph(1 nodes, 1 edges):
edges:
[0] = 0 -> 0 (1)
nodes:
0  in: [0] 0 (1),
0 out: [0] 0 (1),

> ERROR: Node #1 'a' does not exist

> DEBUG: Current graph state:
Graph(1 nodes, 1 edges):
edges:
[0] = 0 -> 0 (1)
nodes:
0  in: [0] 0 (1),
0 out: [0] 0 (1),

> DEBUG: Name: 'a', Index: 1

> DEBUG: Current graph state:
Graph(2 nodes, 1 edges):
edges:
[0] = 0 -> 0 (1)
nodes:
0  in: [0] 0 (1),
0 out: [0] 0 (1),
1  in:
1 out:

> DEBUG: Name: 'c', Index: 2

> DEBUG: Current graph state:
Graph(3 nodes, 1 edges):
edges:
[0] = 0 -> 0 (1)
nodes:
0  in: [0] 0 (1),
0 out: [0] 0 (1),
1  in:
1 out:
2  in:
2 out:

> DEBUG: Index1: 1, Index2: 0, Weight: 1

> DEBUG: Current graph state:
Graph(3 nodes, 2 edges):
edges:
[0] = 0 -> 0 (1)
[1] = 1 -> 0 (1)
nodes:
0  in: [0] 0 (1), [1] 1 (1),
0 out: [0] 0 (1),
1  in:
1 out: [1] 0 (1),
2  in:
2 out:

> DEBUG: Index1: 0, Index2: 2, Weight: 1

> DEBUG: Current graph state:
Graph(3 nodes, 3 edges):
edges:
[0] = 0 -> 0 (1)
[1] = 1 -> 0 (1)
[2] = 0 -> 2 (1)
nodes:
0  in: [0] 0 (1), [1] 1 (1),
0 out: [0] 0 (1), [2] 2 (1),
1  in:
1 out: [1] 0 (1),
2  in: [2] 0 (1),
2 out:

> DEBUG: Index1: 2, Index2: 1, Weight: 1

> DEBUG: Current graph state:
Graph(3 nodes, 4 edges):
edges:
[0] = 0 -> 0 (1)
[1] = 1 -> 0 (1)
[2] = 0 -> 2 (1)
[3] = 2 -> 1 (1)
nodes:
0  in: [0] 0 (1), [1] 1 (1),
0 out: [0] 0 (1), [2] 2 (1),
1  in: [3] 2 (1),
1 out: [1] 0 (1),
2  in: [2] 0 (1),
2 out: [3] 1 (1),

> DEBUG: Index: 0

> DEBUG: Current graph state:
Graph(2 nodes, 1 edges):
edges:
[0] = 0 -> 2 (1)
nodes:
0  in:
0 out: [1] 2 (1),
1  in: [1] 0 (1),
1 out:

> ERROR: Node #2 'b' does not exist

> DEBUG: Current graph state:
Graph(2 nodes, 1 edges):
edges:
[0] = 0 -> 2 (1)
nodes:
0  in:
0 out: [1] 2 (1),
1  in: [1] 0 (1),
1 out:

> DEBUG: Index1: 0, Index2: 0, Weight: 4

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
nodes:
0  in: [1] 0 (4),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:

> ERROR: Node #1 'b' does not exist

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
nodes:
0  in: [1] 0 (4),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:

> DEBUG: Name: 'd', Index: 2

> DEBUG: Current graph state:
Graph(3 nodes, 2 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
nodes:
0  in: [1] 0 (4),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:
2  in:
2 out:

> src/graph.c:143:5: runtime error: applying zero offset to null pointer
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior src/graph.c:143:5 in 
src/graph.c:143:5: runtime error: null pointer passed as argument 1, which is declared to never be null
/usr/include/string.h:44:28: note: nonnull attribute specified here
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior src/graph.c:143:5 in 
src/graph.c:143:5: runtime error: null pointer passed as argument 2, which is declared to never be null
/usr/include/string.h:44:28: note: nonnull attribute specified here
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior src/graph.c:143:5 in 
src/graph.c:146:5: runtime error: null pointer passed as argument 1, which is declared to never be null
/usr/include/stdlib.h:839:30: note: nonnull attribute specified here
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior src/graph.c:146:5 in 
DEBUG: Index: 2

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
nodes:
0  in: [1] 0 (4),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:

> ERROR: Node #1 'd' does not exist

> DEBUG: Current graph state:
Graph(2 nodes, 2 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
nodes:
0  in: [1] 0 (4),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:

> DEBUG: Name: 'd', Index: 2

> DEBUG: Current graph state:
Graph(3 nodes, 2 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
nodes:
0  in: [1] 0 (4),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:
2  in:
2 out:

> DEBUG: Index1: 2, Index2: 2, Weight: 67

> DEBUG: Current graph state:
Graph(3 nodes, 3 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
[2] = 2 -> 2 (67)
nodes:
0  in: [1] 0 (4),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:
2  in: [2] 2 (67),
2 out: [2] 2 (67),

> DEBUG: Index1: 2, Index2: 0, Weight: 87

> DEBUG: Current graph state:
Graph(3 nodes, 4 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
[2] = 2 -> 2 (67)
[3] = 2 -> 0 (87)
nodes:
0  in: [1] 0 (4), [3] 2 (87),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:
2  in: [2] 2 (67),
2 out: [2] 2 (67), [3] 0 (87),

> ERROR: Node #2 'b' does not exist

> DEBUG: Current graph state:
Graph(3 nodes, 4 edges):
edges:
[0] = 0 -> 2 (1)
[1] = 0 -> 0 (4)
[2] = 2 -> 2 (67)
[3] = 2 -> 0 (87)
nodes:
0  in: [1] 0 (4), [3] 2 (87),
0 out: [1] 0 (4), [1] 0 (4),
1  in: [1] 0 (4),
1 out:
2  in: [2] 2 (67),
2 out: [2] 2 (67), [3] 0 (87),

> 